<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh"><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="zh" /><updated>2018-04-06T11:38:19+00:00</updated><id>http://localhost:4000/</id><title type="html">盛书强の博客</title><subtitle>Someone's Blog
</subtitle><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><entry><title type="html">Android事件分发-来龙去脉</title><link href="http://localhost:4000/2018/02/10/Android%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91-%E6%9D%A5%E9%BE%99%E5%8E%BB%E8%84%89.html" rel="alternate" type="text/html" title="Android事件分发-来龙去脉" /><published>2018-02-10T00:00:00+00:00</published><updated>2018-02-10T00:00:00+00:00</updated><id>http://localhost:4000/2018/02/10/Android%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91-%E6%9D%A5%E9%BE%99%E5%8E%BB%E8%84%89</id><content type="html" xml:base="http://localhost:4000/2018/02/10/Android%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91-%E6%9D%A5%E9%BE%99%E5%8E%BB%E8%84%89.html">&lt;!-- 添加目录 http://blog.csdn.net/hengwei_vc/article/details/47122103 --&gt;
&lt;!-- &lt;script src=&quot;/javascripts/jquery-2.1.4.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&gt;--&gt;
&lt;!-- &lt;script src=&quot;/javascripts/toc.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&gt;--&gt;
&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;&gt;--&gt;
&lt;!-- $(document).ready(function() {&gt;--&gt;
&lt;!--     $('#toc').toc();&gt;--&gt;
&lt;!-- }); &lt;/script&gt;&gt;--&gt;
&lt;!--&lt;div id=&quot;toc&quot;&gt;&lt;/div&gt;--&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;情境situation&quot;&gt;情境(Situation)&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;专注于移动互联网数年，作为高P的我【鼓掌】竟然对事件分发机制见招拆招，似懂非懂。不专业，没法忍。&lt;/li&gt;
  &lt;li&gt;View树的递归嵌套逻辑让广大一线同行云里雾里，手足无措。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;冲突complication&quot;&gt;冲突(Complication)&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;网上好多相关主题的博客，描述信息点非常多（但是ACTION_CANCEL描述很少），看完后不明觉厉。&lt;/li&gt;
  &lt;li&gt;事件分发主要用于解决自定义炫酷控件以及滑动嵌套引发的冲突问题（程序傻傻分不清是横滑还是竖滑），发现同行各种写法都有，雷无处不在【人在家中坐，锅从天上来】。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;我的机会来了&lt;/strong&gt;【大笑】&lt;/p&gt;

&lt;h1 id=&quot;疑问question&quot;&gt;疑问(Question)&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;有没有体系化剖析套路？&lt;/li&gt;
  &lt;li&gt;指出常见错误，给出最佳实践？&lt;/li&gt;
  &lt;li&gt;清晰明了的给出一张图，便于查阅？&lt;/li&gt;
  &lt;li&gt;“鱼”和“渔”可以兼得？&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;答案answer&quot;&gt;答案(Answer)&lt;/h1&gt;

&lt;h2 id=&quot;剖析&quot;&gt;剖析&lt;/h2&gt;

&lt;h3 id=&quot;论点&quot;&gt;论点&lt;/h3&gt;

&lt;h4 id=&quot;约法三章&quot;&gt;约法三章&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;限于个人水平，本文只包含单点触控事件（ACTION_DOWN，ACTION_MOVE，ACTION_UP，ACTION_CANCEL）。&lt;/li&gt;
  &lt;li&gt;Window类相关的我不会，肤浅的认为和事件分发关系不大（求大牛点拨），直接跳过。&lt;/li&gt;
  &lt;li&gt;一家之言，姑妄言之，姑妄听之。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;点&quot;&gt;点&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/reference/android/view/MotionEvent.html&quot;&gt;事件流一致性保证(Consistency Guarantees)&lt;/a&gt;：按下开始，中间可能伴随着移动，松开或者取消结束。ACTION_DOWN -&amp;gt; ACTION_MOVE(*) -&amp;gt; ACTION_UP/ACTION_CANCEL。&lt;/li&gt;
  &lt;li&gt;View类的dispatchTouchEvent方法完成事件的消费处理，ViewGroup的dispatchTouchEvent方法完成事件的分发处理。正常情况下不建议重写该方法改变系统事件分发机制。&lt;/li&gt;
  &lt;li&gt;ViewGroup类的onInterceptTouchEvent方法完成事件的拦截处理。事件分发路径上的ViewGroup，在ACTION_DOWN或者不是自己直接消费事件时一定会调用onInterceptTouchEvent方法。&lt;/li&gt;
  &lt;li&gt;View类的onTouchEvent方法完成具体处理事件消费，即触发点击监听（OnClickListener）和长时间点击监听(OnLongClickListener)以及按键状态、焦点相关处理。
    &lt;ol&gt;
      &lt;li&gt;如果设置了OnTouchListener，会先调用OnTouchListener，如果该监听onTouch返回true，则不会调用onTouchEvent，直接返回已消费；&lt;/li&gt;
      &lt;li&gt;如果设置了TouchDelegate ，onTouchEvent中会先调用TouchDelegate，如果该类onTouchEvent返回true，则直接返回已消费；&lt;/li&gt;
      &lt;li&gt;如果View 可点击，执行onTouchEvent中事件处理，并返回true；
        &lt;ol&gt;
          &lt;li&gt;ACTION_DOWN：置按键标志位为按下状态，并触发延时（500ms）执行长按点击事件。&lt;/li&gt;
          &lt;li&gt;ACTION_MOVE：如果按键坐标超出该控件区域，则置按键标志位为非按下状态，并且移除ACTION_DOWN触发的延时执行长按点击事件。&lt;/li&gt;
          &lt;li&gt;ACTION_UP：如果按键标志位为按下状态，并且ACTION_DOWN触发的长按点击事件还未执行，则移除长按点击事件，执行点击事件。&lt;/li&gt;
          &lt;li&gt;ACTION_CANCEL：置按键标志位为非按下状态，移除ACTION_DOWN触发的延时执行长按点击事件。&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;否则不可点击，返回false；&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;论据&quot;&gt;论据&lt;/h3&gt;

&lt;p&gt;基于&lt;strong&gt;Android 8.0 （API Level 28）&lt;/strong&gt;源码解析&lt;/p&gt;

&lt;h4 id=&quot;人机交互&quot;&gt;人机交互&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/人机交互流程图.png&quot; alt=&quot;人机交互流程图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/事件分发Java栈.png&quot; alt=&quot;事件分发Java栈&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;赏析&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户的按键行为-&amp;gt;手机传感器-&amp;gt;ViewRootImpl-&amp;gt;DecorView-&amp;gt;WindowCallbackWrapper-&amp;gt;Activity-&amp;gt;PhoneWindow-&amp;gt;DecorView-&amp;gt;ViewGroup*-&amp;gt;View-&amp;gt;程序员的代码逻辑-&amp;gt;硬件（显示器、扬声器等）响应输出-&amp;gt;用户感知&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;view树&quot;&gt;View树&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/AndroidView树布局结构.png&quot; alt=&quot;AndroidView树布局结构&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;赏析&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;View是由树形结构组织，节点为ViewGroup或者View。ViewGroup可以包含多个子节点，View没有子节点。&lt;/li&gt;
  &lt;li&gt;Android中View树的根节点为DecorView（父View为FrameLayout，属于ViewGroup）。&lt;/li&gt;
  &lt;li&gt;Android中用户可自定义的View子树根节点id为“android:id/content”。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;类图&quot;&gt;类图&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/View和ViewGroup类图.png&quot; alt=&quot;View和ViewGroup类图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;赏析&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ViewRootImpl是Android层逻辑起始点，用于接收来自系统底层的事件消息。相当于View管理类，本身不是View。（BTW：View绘制流程的三部曲（measure、layout、draw）也由该类触发的。）&lt;/li&gt;
  &lt;li&gt;DecorView是Android View树的根节点，持有window对象。本身能够直接进行真正事件分发能力（继承了父类ViewGroup和View的事件分发处理功能），但是事件分发会直接调用window，间接传递到Activity的事件分发，后续会由Activity回调DecorView的真正事件分发能力。对应图中的环形依赖。&lt;/li&gt;
  &lt;li&gt;Activity是Android中的页面，真正的事件分发由该类的dispatchTouchEvent触发。（Easter Eggs：如果你想让用户操作不了你的界面，蒙一层透明的View是不是有点low，直接重写该方法就可以控制。）&lt;/li&gt;
  &lt;li&gt;ViewGroup负责事件分发和拦截处理。按下事件和后续事件（移动、释放或者取消）处理不相同。
    &lt;ol&gt;
      &lt;li&gt;按下事件，先判断是否拦截。
        &lt;ol&gt;
          &lt;li&gt;如果不拦截的话，分发事件寻找目标消费子View（逆序遍历子View，递归调用子View的事件分发，判断是否有子View消费。mFirstTouchTarget存储目标消费子View对象）。
            &lt;ol&gt;
              &lt;li&gt;如果有子View消费，则目标子View消费事件。&lt;/li&gt;
              &lt;li&gt;否则自己尝试消费事件。&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
          &lt;li&gt;否则直接自己尝试消费事件。&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;后续事件
        &lt;ol&gt;
          &lt;li&gt;如果按下事件找到了目标消费子View，则判断是否拦截，否则不拦截。&lt;/li&gt;
          &lt;li&gt;如果有目标消费子View，则根据是否拦截。
            &lt;ol&gt;
              &lt;li&gt;如果没有拦截，正常传送后续事件；&lt;/li&gt;
              &lt;li&gt;如果有拦截，则当前事件转换为取消事件发送给目标消费子View，并且重置目标消费子View为空，接下来的后续事件直接自己尝试消费事件（不管是否消费，后续事件都会接收到&amp;amp;尝试处理事件分发）；&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
          &lt;li&gt;否则自己尝试消费事件。（不会调用是否拦截，其实拦截或者不拦截，都是自己消费事件。）&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;View负责事件消费事件处理。
    &lt;ol&gt;
      &lt;li&gt;调用mOnTouchListener的onTouch。
        &lt;ol&gt;
          &lt;li&gt;如果消费，直接返回true；&lt;/li&gt;
          &lt;li&gt;否则，继续调用onTouchEvent方法；
            &lt;ol&gt;
              &lt;li&gt;如果为启用的（enable），返回可点击（clickable）。&lt;/li&gt;
              &lt;li&gt;否则，调用mTouchDelegate的onTouchEvent。
                &lt;ol&gt;
                  &lt;li&gt;如果消费，直接返回true；&lt;/li&gt;
                  &lt;li&gt;否则，
                    &lt;ol&gt;
                      &lt;li&gt;如果可点击（clickable）
                        &lt;ol&gt;
                          &lt;li&gt;进行事件流（ACTION_DOWN，ACTION_MOVE，ACTION_UP，ACTION_CANCEL）处理（包含焦点、按键状态、按键和长时间按键）；&lt;/li&gt;
                          &lt;li&gt;返回true。&lt;/li&gt;
                        &lt;/ol&gt;
                      &lt;/li&gt;
                      &lt;li&gt;否则返回false；&lt;/li&gt;
                    &lt;/ol&gt;
                  &lt;/li&gt;
                &lt;/ol&gt;
              &lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;注释&quot;&gt;注释&lt;/h4&gt;

&lt;h5 id=&quot;decorview&quot;&gt;DecorView&lt;/h5&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;sr&quot;&gt;/**
  * Decor的意思是：装饰，布置。
  * View树的根节点。
  * 事件分发的启点，ViewRootImpl最先调用dispatchPointerEvent（实现在父类View里面）。
  * 事件调用在DecorView里面形成了一个环。（先通过Window交由Activity分发，Activity再调用DecorView中的真正事件分发方法）
  */&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DecorView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FrameLayout&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PhoneWindow&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;vi&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DecorView&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;直接覆盖&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的事件分发实现，其实这只是饶了个圈，&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;正真的事件分发会由&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;回调到&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superDispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的事件分发处理）。&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;调用&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WindowCallbackWrapper&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;对象继续分发。&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Callback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isDestroyed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mFeatureId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superDispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;调用父类&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ViewGroup&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;进行事件分发处理。&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;windowcallbackwrapper&quot;&gt;WindowCallbackWrapper&lt;/h5&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;sr&quot;&gt;/**
  * Wrapper的意思是包装材料。
  * 实实在在的一个壳，包裹着Activity。
  */&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WindowCallbackWrapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Callback&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Callback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mWrapped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;vi&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;交给&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Callback&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（具体对象为&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Activity&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;）接力事件分发。&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mWrapped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;activity&quot;&gt;Activity&lt;/h5&gt;
&lt;p&gt;{% highlight java linenos %}
/**&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Activity和View不一样，Activity就是一个壳，没有事件分发机制，View树如果没有消费，Activity捡个漏。
  */
public class Activity implements Window.Callback  {
private Window mWindow;&lt;/p&gt;

    &lt;p&gt;public boolean dispatchTouchEvent(MotionEvent ev) {
    if (ev.getAction() == MotionEvent.ACTION_DOWN) {
        onUserInteraction();
    }&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 交给Window（具体对象为PhoneWindow）接力事件分发。
if (getWindow().superDispatchTouchEvent(ev)) {
    // View树消费掉事件
    return true;
}

// 如果View树没有消费事件，Activity消费事件的机会来了。
// 启示：如果View树消费事件，在按下事件的后续事件中，如果父ViewGroup进行拦截，
// 虽然后续返回的消费状态对整个事件流没有影响，但是会对Activity有影响（View数不消费，Activity有机会消费）。
return onTouchEvent(ev); }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;public boolean onTouchEvent(MotionEvent event) {
    // 事件消费处理，系统默认基本不干啥
    if (mWindow.shouldCloseOnTouch(this, event)) {
        finish();
        return true;
    }&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return false; } } {% endhighlight %} ##### PhoneWindow ```ruby /**
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PhoneWindow也是一个壳，将事件转回给DecorView分发处理。
  */
public class PhoneWindow extends Window  {
private DecorView mDecor;&lt;/p&gt;

    &lt;p&gt;@Override
public boolean superDispatchTouchEvent(MotionEvent event) {
    // 交给DecorView接力事件分发（自此，环形结束，开始ViewGroup和View中事件分发和消费闪亮登场）。
    return mDecor.superDispatchTouchEvent(event);
}
}&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
##### ViewGroup
```ruby
/**
  * ViewGroup，View容器的意思。
  * dispatchTouchEvent完成时间分发逻辑。
  * onInterceptTouchEvent：为事件拦截接口，父控件可以主动截留事件自己消费，否则只能等子Viwe树都不消费才能捡漏。【有控制权就是爸爸】
  */
public abstract class ViewGroup extends View implements ViewParent  {
    
    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        if (mInputEventConsistencyVerifier != null) {
            mInputEventConsistencyVerifier.onTouchEvent(ev, 1);
        }

        // If the event targets the accessibility focused view and this is it, start
        // normal event dispatch. Maybe a descendant is what will handle the click.
        if (ev.isTargetAccessibilityFocus() &amp;amp;&amp;amp; isAccessibilityFocusedViewOrHost()) {
            ev.setTargetAccessibilityFocus(false);
        }

        boolean handled = false;
        if (onFilterTouchEventForSecurity(ev)) {
            final int action = ev.getAction();
            final int actionMasked = action &amp;amp; MotionEvent.ACTION_MASK;

            // Handle an initial down.
            if (actionMasked == MotionEvent.ACTION_DOWN) {
                // Throw away all previous state when starting a new touch gesture.
                // The framework may have dropped the up or cancel event for the previous gesture
                // due to an app switch, ANR, or some other state change.
                // 按下事件会进行状态重置。（才有外部拦截法解决滑动冲突的小伙伴要注意这里重置，拦截调用必须要做此之后。）
                cancelAndClearTouchTargets(ev);
                resetTouchState();
            }

            // Check for interception.
            // 是否拦截判断
            final boolean intercepted;
            // 拦截条件1，要么是按下事件，要么自己不直接消费事件。
            if (actionMasked == MotionEvent.ACTION_DOWN
                    || mFirstTouchTarget != null) {
                // 拦截条件2，允许拦截开关打开。
                //（默认状态是打开的，其他View可以调用requestDisallowInterceptTouchEvent进行控制，
                // 多为子View掉父View，滑动冲突外部拦截法就是靠调用这个接口控制父View拦截）。【爸爸的权利也不是绝对的】
                final boolean disallowIntercept = (mGroupFlags &amp;amp; FLAG_DISALLOW_INTERCEPT) != 0;
                if (!disallowIntercept) {
                    // 满足两个条件才会调到拦截控制（只能通过重写该方法，默认不拦截）。
                    intercepted = onInterceptTouchEvent(ev);
                    ev.setAction(action); // restore action in case it was changed
                } else {
                    intercepted = false;
                }
            } else {
                // There are no touch targets and this action is not an initial down
                // so this view group continues to intercept touches.
                // 这种场景我没有遇到过，可能多点触控会调到【说错了当我放屁】
                intercepted = true;
            }

            // If intercepted, start normal event dispatch. Also if there is already
            // a view that is handling the gesture, do normal event dispatch.
            if (intercepted || mFirstTouchTarget != null) {
                ev.setTargetAccessibilityFocus(false);
            }

            // Check for cancelation.
            final boolean canceled = resetCancelNextUpFlag(this)
                    || actionMasked == MotionEvent.ACTION_CANCEL;

            // Update list of touch targets for pointer down, if needed.
            final boolean split = (mGroupFlags &amp;amp; FLAG_SPLIT_MOTION_EVENTS) != 0;
            TouchTarget newTouchTarget = null;
            boolean alreadyDispatchedToNewTouchTarget = false;
            // 递归查找目标消费子View条件1：事件没有被取消，也没有被拦截
            if (!canceled &amp;amp;&amp;amp; !intercepted) {

                // If the event is targeting accessiiblity focus we give it to the
                // view that has accessibility focus and if it does not handle it
                // we clear the flag and dispatch the event to all children as usual.
                // We are looking up the accessibility focused host to avoid keeping
                // state since these events are very rare.
                View childWithAccessibilityFocus = ev.isTargetAccessibilityFocus()
                        ? findChildWithAccessibilityFocus() : null;
                // 递归查找目标消费子View条件2：事件必须是按下事件。【多点触控的不讨论，关键是我也不会】
                if (actionMasked == MotionEvent.ACTION_DOWN
                        || (split &amp;amp;&amp;amp; actionMasked == MotionEvent.ACTION_POINTER_DOWN)
                        || actionMasked == MotionEvent.ACTION_HOVER_MOVE) {
                    final int actionIndex = ev.getActionIndex(); // always 0 for down
                    final int idBitsToAssign = split ? 1 &amp;lt;&amp;lt; ev.getPointerId(actionIndex)
                            : TouchTarget.ALL_POINTER_IDS;

                    // Clean up earlier touch targets for this pointer id in case they
                    // have become out of sync.
                    removePointersFromTouchTargets(idBitsToAssign);

                    final int childrenCount = mChildrenCount;
                    if (newTouchTarget == null &amp;amp;&amp;amp; childrenCount != 0) {
                        final float x = ev.getX(actionIndex);
                        final float y = ev.getY(actionIndex);
                        // Find a child that can receive the event.
                        // Scan children from front to back.
                        // 可以重置顺序，和事件分发关系不大，跳过
                        final ArrayList&amp;lt;View&amp;gt; preorderedList = buildTouchDispatchChildList();
                        final boolean customOrder = preorderedList == null
                                &amp;amp;&amp;amp; isChildrenDrawingOrderEnabled();
                        final View[] children = mChildren;
                        // 逆序遍历，后面的View后绘制，盖在上面
                        for (int i = childrenCount - 1; i &amp;gt;= 0; i--) {
                            final int childIndex = getAndVerifyPreorderedIndex(
                                    childrenCount, i, customOrder);
                            final View child = getAndVerifyPreorderedView(
                                    preorderedList, children, childIndex);

                            // If there is a view that has accessibility focus we want it
                            // to get the event first and if not handled we will perform a
                            // normal dispatch. We may do a double iteration but this is
                            // safer given the timeframe.
                            if (childWithAccessibilityFocus != null) {
                                if (childWithAccessibilityFocus != child) {
                                    continue;
                                }
                                childWithAccessibilityFocus = null;
                                i = childrenCount - 1;
                            }
                            // 消费事件View资格1：事件的坐标在View区域内。
                            if (!canViewReceivePointerEvents(child)
                                    || !isTransformedTouchPointInView(x, y, child, null)) {
                                ev.setTargetAccessibilityFocus(false);
                                continue;
                            }

                            newTouchTarget = getTouchTarget(child);
                            if (newTouchTarget != null) {
                                // Child is already receiving touch within its bounds.
                                // Give it the new pointer in addition to the ones it is handling.
                                newTouchTarget.pointerIdBits |= idBitsToAssign;
                                break;
                            }

                            resetCancelNextUpFlag(child);
                            // 消费事件View资格2：自己或者子View树消费事件。进入递归事件分发。
                            if (dispatchTransformedTouchEvent(ev, false, child, idBitsToAssign)) {
                                // Child wants to receive touch within its bounds.
                                mLastTouchDownTime = ev.getDownTime();
                                if (preorderedList != null) {
                                    // childIndex points into presorted list, find original index
                                    for (int j = 0; j &amp;lt; childrenCount; j++) {
                                        if (children[childIndex] == mChildren[j]) {
                                            mLastTouchDownIndex = j;
                                            break;
                                        }
                                    }
                                } else {
                                    mLastTouchDownIndex = childIndex;
                                }
                                mLastTouchDownX = ev.getX();
                                mLastTouchDownY = ev.getY();
                                // 标记当前View为目标消费子View，消费路径上都是父View标记直接子View（下发分发不用再找了）。不存在跨级。
                                // 我也没有搞明白为啥整一个链式结构存目标消费子View。我没有遇到多余1个目标消费子View的情况。【看逻辑，如果有子View消费，则跳出循环，不会继续分发】
                                newTouchTarget = addTouchTarget(child, idBitsToAssign);
                                alreadyDispatchedToNewTouchTarget = true;
                                break;
                            }

                            // The accessibility focus didn't handle the event, so clear
                            // the flag and do a normal dispatch to all children.
                            ev.setTargetAccessibilityFocus(false);
                        }
                        if (preorderedList != null) preorderedList.clear();
                    }

                    if (newTouchTarget == null &amp;amp;&amp;amp; mFirstTouchTarget != null) {
                        // Did not find a child to receive the event.
                        // Assign the pointer to the least recently added target.
                        newTouchTarget = mFirstTouchTarget;
                        while (newTouchTarget.next != null) {
                            newTouchTarget = newTouchTarget.next;
                        }
                        newTouchTarget.pointerIdBits |= idBitsToAssign;
                    }
                }
            }

            // Dispatch to touch targets.
            // 没有目标子View消费，自己消费。（要么自己拦截了，要么子View树没有消费）
            if (mFirstTouchTarget == null) {
                // No touch targets so treat this as an ordinary view.
                handled = dispatchTransformedTouchEvent(ev, canceled, null,
                        TouchTarget.ALL_POINTER_IDS);
            } else {
                // Dispatch to touch targets, excluding the new touch target if we already
                // dispatched to it.  Cancel touch targets if necessary.
                TouchTarget predecessor = null;
                TouchTarget target = mFirstTouchTarget;
                while (target != null) {
                    final TouchTarget next = target.next;
                    // 如果是按下事件，则已消费，直接置消费状态为true
                    if (alreadyDispatchedToNewTouchTarget &amp;amp;&amp;amp; target == newTouchTarget) {
                        handled = true;
                    } else {
                        final boolean cancelChild = resetCancelNextUpFlag(target.child)
                                || intercepted;
                        // 非按下事件，要么持续正常处理消费，要么被拦截（事件转成取消事件，还是继续分发给目标View）
                        if (dispatchTransformedTouchEvent(ev, cancelChild,
                                target.child, target.pointerIdBits)) {
                            handled = true;
                        }
                        if (cancelChild) {
                            // 如果是取消事件（要么被拦截，要么传过来的就是取消事件），则清空目标消费子View。
                            if (predecessor == null) {
                                mFirstTouchTarget = next;
                            } else {
                                predecessor.next = next;
                            }
                            target.recycle();
                            target = next;
                            continue;
                        }
                    }
                    predecessor = target;
                    target = next;
                }
            }

            // Update list of touch targets for pointer up or cancel, if needed.
            if (canceled
                    || actionMasked == MotionEvent.ACTION_UP
                    || actionMasked == MotionEvent.ACTION_HOVER_MOVE) {
                resetTouchState();
            } else if (split &amp;amp;&amp;amp; actionMasked == MotionEvent.ACTION_POINTER_UP) {
                final int actionIndex = ev.getActionIndex();
                final int idBitsToRemove = 1 &amp;lt;&amp;lt; ev.getPointerId(actionIndex);
                removePointersFromTouchTargets(idBitsToRemove);
            }
        }

        if (!handled &amp;amp;&amp;amp; mInputEventConsistencyVerifier != null) {
            mInputEventConsistencyVerifier.onUnhandledEvent(ev, 1);
        }
        // 返回消费状态
        return handled;
    }

    // 拦截处理
    public boolean onInterceptTouchEvent(MotionEvent ev) {
        if (ev.isFromSource(InputDevice.SOURCE_MOUSE)
                &amp;amp;&amp;amp; ev.getAction() == MotionEvent.ACTION_DOWN
                &amp;amp;&amp;amp; ev.isButtonPressed(MotionEvent.BUTTON_PRIMARY)
                &amp;amp;&amp;amp; isOnScrollbarThumb(ev.getX(), ev.getY())) {
            return true;
        }
        return false;
    }

    // 事件分发处理封装部分逻辑的子方法，实现取消事件转换
    private boolean dispatchTransformedTouchEvent(MotionEvent event, boolean cancel,
            View child, int desiredPointerIdBits) {
        final boolean handled;

        // Canceling motions is a special case.  We don't need to perform any transformations
        // or filtering.  The important part is the action, not the contents.
        final int oldAction = event.getAction();
        if (cancel || oldAction == MotionEvent.ACTION_CANCEL) {
            // 转换成取消事件
            event.setAction(MotionEvent.ACTION_CANCEL);
            if (child == null) {
                handled = super.dispatchTouchEvent(event);
            } else {
                handled = child.dispatchTouchEvent(event);
            }
            event.setAction(oldAction);
            return handled;
        }

        // Calculate the number of pointers to deliver.
        final int oldPointerIdBits = event.getPointerIdBits();
        final int newPointerIdBits = oldPointerIdBits &amp;amp; desiredPointerIdBits;

        // If for some reason we ended up in an inconsistent state where it looks like we
        // might produce a motion event with no pointers in it, then drop the event.
        if (newPointerIdBits == 0) {
            return false;
        }

        // If the number of pointers is the same and we don't need to perform any fancy
        // irreversible transformations, then we can reuse the motion event for this
        // dispatch as long as we are careful to revert any changes we make.
        // Otherwise we need to make a copy.
        final MotionEvent transformedEvent;
        if (newPointerIdBits == oldPointerIdBits) {
            if (child == null || child.hasIdentityMatrix()) {
                if (child == null) {
                    handled = super.dispatchTouchEvent(event);
                } else {
                    final float offsetX = mScrollX - child.mLeft;
                    final float offsetY = mScrollY - child.mTop;
                    event.offsetLocation(offsetX, offsetY);

                    handled = child.dispatchTouchEvent(event);

                    event.offsetLocation(-offsetX, -offsetY);
                }
                return handled;
            }
            transformedEvent = MotionEvent.obtain(event);
        } else {
            transformedEvent = event.split(newPointerIdBits);
        }

        // Perform any necessary transformations and dispatch.
        if (child == null) {
            handled = super.dispatchTouchEvent(transformedEvent);
        } else {
            final float offsetX = mScrollX - child.mLeft;
            final float offsetY = mScrollY - child.mTop;
            transformedEvent.offsetLocation(offsetX, offsetY);
            if (! child.hasIdentityMatrix()) {
                transformedEvent.transform(child.getInverseMatrix());
            }

            handled = child.dispatchTouchEvent(transformedEvent);
        }

        // Done.
        transformedEvent.recycle();
        return handled;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/事件DispatchTouchEvent流程图.png&quot; alt=&quot;事件DispatchTouchEvent流程图&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;view&quot;&gt;View&lt;/h5&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatchPointerEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;树接收事件的起点，由&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ViewRootImpl&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;调用&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DecorView&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的该方法开始，&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;接下来会调用到&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DecorView&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;方法。&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatchGenericMotionEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;事件消费处理&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isTargetAccessibilityFocus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;We&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;don&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'t have focus or no virtual descendant has it, do not handle the event.
            if (!isAccessibilityFocusedViewOrHost()) {
                return false;
            }
            // We have focus and got the event, then use normal event dispatch.
            event.setTargetAccessibilityFocus(false);
        }

        boolean result = false;

        if (mInputEventConsistencyVerifier != null) {
            mInputEventConsistencyVerifier.onTouchEvent(event, 0);
        }

        final int actionMasked = event.getActionMasked();
        if (actionMasked == MotionEvent.ACTION_DOWN) {
            // Defensive cleanup for new gesture
            stopNestedScroll();
        }

        if (onFilterTouchEventForSecurity(event)) {
            if ((mViewFlags &amp;amp; ENABLED_MASK) == ENABLED &amp;amp;&amp;amp; handleScrollBarDragging(event)) {
                result = true;
            }
            //noinspection SimplifiableIfStatement
            ListenerInfo li = mListenerInfo;
            // 优先mOnTouchListener消费处理，如果消费，直接返回已消费
            if (li != null &amp;amp;&amp;amp; li.mOnTouchListener != null
                    &amp;amp;&amp;amp; (mViewFlags &amp;amp; ENABLED_MASK) == ENABLED
                    &amp;amp;&amp;amp; li.mOnTouchListener.onTouch(this, event)) {
                result = true;
            }

            // 自己处理消费，封装在onTouchEvent内
            if (!result &amp;amp;&amp;amp; onTouchEvent(event)) {
                result = true;
            }
        }

        if (!result &amp;amp;&amp;amp; mInputEventConsistencyVerifier != null) {
            mInputEventConsistencyVerifier.onUnhandledEvent(event, 0);
        }

        // Clean up after nested scrolls if this is the end of a gesture;
        // also cancel it if we tried an ACTION_DOWN but we didn'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;want&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rest&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gesture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actionMasked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_UP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;actionMasked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_CANCEL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actionMasked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_DOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stopNestedScroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;针对完整事件流（&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_DOWN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_MOVE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_UP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_CANCEL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;）完成按键监听、长时间按键监听、焦点以及按键状态处理。&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;onTouchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mViewFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clickable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CLICKABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CLICKABLE&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LONG_CLICKABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LONG_CLICKABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CONTEXT_CLICKABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CONTEXT_CLICKABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENABLED_MASK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DISABLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;按键未启用，直接返回点击状态。&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_UP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPrivateFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PFLAG_PRESSED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;setPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mPrivateFlags3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PFLAG3_FINGER_DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disabled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clickable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;still&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;touch&lt;/span&gt;
            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;just&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doesn&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'t respond to them.
            return clickable;
        }
        // 有效触摸代理消费事件，可用于扩大点击热点控制。如果消费，直接返回已消费。
        if (mTouchDelegate != null) {
            if (mTouchDelegate.onTouchEvent(event)) {
                return true;
            }
        }

        if (clickable || (viewFlags &amp;amp; TOOLTIP) == TOOLTIP) {
            // 可点击情况下进行按键处理。
            switch (action) {
                case MotionEvent.ACTION_UP:
                    mPrivateFlags3 &amp;amp;= ~PFLAG3_FINGER_DOWN;
                    if ((viewFlags &amp;amp; TOOLTIP) == TOOLTIP) {
                        handleTooltipUp();
                    }
                    if (!clickable) {
                        removeTapCallback();
                        removeLongPressCallback();
                        mInContextButtonPress = false;
                        mHasPerformedLongPress = false;
                        mIgnoreNextUpEvent = false;
                        break;
                    }
                    boolean prepressed = (mPrivateFlags &amp;amp; PFLAG_PREPRESSED) != 0;
                    // 检查按键标志位状态，只有为按下状态才接着处理。
                    if ((mPrivateFlags &amp;amp; PFLAG_PRESSED) != 0 || prepressed) {
                        // take focus if we don'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
                        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
                        &lt;span class=&quot;nf&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;focusTaken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFocusable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFocusableInTouchMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFocused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;focusTaken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestFocus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prepressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;being&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;released&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actually&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;showed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pressed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;Make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pressed&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scheduling&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sees&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
                            &lt;span class=&quot;nf&quot;&gt;setPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mHasPerformedLongPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mIgnoreNextUpEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longpress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ACTION_DOWN&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;触发的长按点击事件还未执行，则移除长按点击事件，&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;removeLongPressCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;perform&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;click&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;were&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;
                            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focusTaken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rather&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;than&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calling&lt;/span&gt;
                                &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performClick&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lets&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;
                                &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;click&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
                                &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPerformClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                    &lt;span class=&quot;n&quot;&gt;mPerformClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PerformClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                                &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;执行点击事件。&lt;/span&gt;
                                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPerformClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                                    &lt;span class=&quot;n&quot;&gt;performClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mUnsetPressedState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;mUnsetPressedState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UnsetPressedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prepressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;postDelayed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mUnsetPressedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                    &lt;span class=&quot;no&quot;&gt;ViewConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getPressedStateDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mUnsetPressedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unpress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;mUnsetPressedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                        &lt;span class=&quot;n&quot;&gt;removeTapCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mIgnoreNextUpEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;InputDevice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SOURCE_TOUCHSCREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;mPrivateFlags3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PFLAG3_FINGER_DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mHasPerformedLongPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clickable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;checkForLongClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;performButtonActionOnTouchDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Walk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;up&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hierarchy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;determine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrolling&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
                    &lt;span class=&quot;nf&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isInScrollingContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isInScrollingContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrolling&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pressed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;
                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;period&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
                    &lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;置按键标志位为按下状态，并触发延时（&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;）执行长按点击事件。&lt;/span&gt;
                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;以下为滚动和非滚动下的处理。&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isInScrollingContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;mPrivateFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PFLAG_PREPRESSED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPendingCheckForTap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;mPendingCheckForTap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CheckForTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;mPendingCheckForTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;mPendingCheckForTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;postDelayed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPendingCheckForTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ViewConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getTapTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrolling&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feedback&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;away&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;setPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;checkForLongClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_CANCEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clickable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;setPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;置按键标志位为非按下状态，移除&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_DOWN&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;触发的延时执行长按点击事件。&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;removeTapCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;removeLongPressCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mInContextButtonPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mHasPerformedLongPress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mIgnoreNextUpEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mPrivateFlags3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PFLAG3_FINGER_DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MotionEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION_MOVE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clickable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;drawableHotspotChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lenient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;about&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moving&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outside&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;
                    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;检查按键坐标是否超出该&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;区域。&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointInView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mTouchSlop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Outside&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;
                        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;press&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checks&lt;/span&gt;
                        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;置按键标志位为非按下状态，并且移除&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_DOWN&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;触发的延时执行长按点击事件。&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;removeTapCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;removeLongPressCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mPrivateFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PFLAG_PRESSED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;setPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;mPrivateFlags3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PFLAG3_FINGER_DOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/事件OnTouchEvent流程图.png&quot; alt=&quot;事件OnTouchEvent流程图&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;事件流&quot;&gt;事件流&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Demo&lt;/strong&gt;（&lt;a href=&quot;https://github.com/shengshuqiang/viewdispatchtouchevent&quot;&gt;git仓库&lt;/a&gt;）ParentInterceptTouchEventActivity页面&lt;/p&gt;

&lt;p&gt;使用&lt;a href=&quot;https://www.jianshu.com/p/d968645067d7&quot;&gt;&lt;strong&gt;MECE&lt;/strong&gt;&lt;/a&gt;（Mutually Exclusive Collectively Exhaustive，相互独立，完全穷尽）法则&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/事件流MEMC图.png&quot; alt=&quot;事件流MEMC图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/ParentInterceptTouchEventActivity.png&quot; alt=&quot;ParentInterceptTouchEventActivity&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.父控件ACTION_DOWN拦截&lt;br /&gt;
2.父控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-1.png&quot; alt=&quot;角色事件消费状态-1&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
1. 接收按下事件 -DOWN-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.onInterceptTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -DOWN-&amp;gt;  Parent.onTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent-true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-1](http://localhost:4000/assets/事件流-1.png)&lt;br /&gt;
2. 接收移动事件 -MOVE-&amp;gt; Parent.dispatchTouchEvent -MOVE-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -MOVE-&amp;gt; Parent.onTouchEvent -消费状态-&amp;gt; Parent.dispatchTouchEvent -true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-2](http://localhost:4000/assets/事件流-2.png)&lt;br /&gt;
3. 接收释放事件 -UP-&amp;gt; Parent.dispatchTouchEvent -UP-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -UP-&amp;gt; Parent.onTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -true-&amp;gt; 返回消费状态true![事件流-3](http://localhost:4000/assets/事件流-3.png)&lt;br /&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_DOWN拦截&lt;br /&gt;
2.父控件不消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-2.png&quot; alt=&quot;角色事件消费状态-2&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
4. 接收按下事件 -DOWN-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.onInterceptTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -DOWN-&amp;gt;  Parent.onTouchEvent -false-&amp;gt; Parent.dispatchTouchEvent-false-&amp;gt; 返回消费状态false&lt;br /&gt;![事件流-4](http://localhost:4000/assets/事件流-4.png)&lt;br /&gt;
5. 接收不到移动事件&lt;br /&gt;
6. 同5
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_MOVE拦截&lt;br /&gt;
2.子控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-3.png&quot; alt=&quot;角色事件消费状态-3&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
7. 接收按下事件 -DOWN-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.onInterceptTouchEvent  -false-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Child.dispatchTouchEvent{Parent分发，遍历调用Child分发消息，Child内部递归分发消息} -DOWN-&amp;gt; TargetChild（目标子控件，区别Child，子控件消费事件，要么是自己消费了，要么是自己的后代或者后代的后代消费了）.onTouchEvent{存在调用多个Child该方法，前提是前面的Child均返回false} -true-&amp;gt; Child.dispatchTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent{记录目标消费Child为该View}-true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-7](http://localhost:4000/assets/事件流-7.png)&lt;br /&gt;
8. 接收移动事件 -MOVE-&amp;gt; Parent.dispatchTouchEvent -MOVE-&amp;gt; Parent.onInterceptTouchEvent  -true-&amp;gt; Parent.dispatchTouchEvent -CANCEL-&amp;gt; Child（目标消费Child）.dispatchTouchEvent{Child处理消费} -CANCEL-&amp;gt;Child.onTouchEvent -消费状态-&amp;gt; Child.dispatchTouchEvent-消费状态-&amp;gt; 返回消费状态&lt;br /&gt;![事件流-8](http://localhost:4000/assets/事件流-8.png)&lt;br /&gt;
9. 接收释放事件 -UP-&amp;gt; Parent.dispatchTouchEvent -UP-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -UP-&amp;gt; Parent.onTouchEvent -消费状态-&amp;gt; Parent.dispatchTouchEvent -消费状态-&amp;gt; 返回消费状态&lt;br /&gt;![事件流-9](http://localhost:4000/assets/事件流-9.png)
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_MOVE拦截&lt;br /&gt;
2.子控件不消费事件&lt;br /&gt;
3.父控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-4.png&quot; alt=&quot;角色事件消费状态-4&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
10. 接收按下事件 -DOWN-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.onInterceptTouchEvent  -false-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Child.dispatchTouchEvent{Parent分发，遍历调用Child分发消息，Child内部递归分发消息} -DOWN-&amp;gt; TargetChild（目标子控件，区别Child，子控件处理消费事件）.onTouchEvent{满足事件坐标在控件内的子View或者子View的后代均会调用到} -false-&amp;gt; Child.dispatchTouchEvent -false-&amp;gt; Parent.dispatchTouchEvent{没有目标消费Child} -DOWN-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -DOWN-&amp;gt;  Parent.onTouchEvent -true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-10](http://localhost:4000/assets/事件流-10.png)&lt;br /&gt;
11. 同2&lt;br /&gt;
12. 同3&lt;br /&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_MOVE拦截&lt;br /&gt;
2.子控件不消费事件&lt;br /&gt;
3.父控件不消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-5.png&quot; alt=&quot;角色事件消费状态-5&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
13. 接收按下事件 -DOWN-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Parent.onInterceptTouchEvent  -false-&amp;gt; Parent.dispatchTouchEvent -DOWN-&amp;gt; Child.dispatchTouchEvent{Parent分发，遍历调用Child分发消息，Child内部递归分发消息} -DOWN-&amp;gt; TargetChild（目标子控件，区别Child，子控件处理消费事件）.onTouchEvent{满足事件坐标在控件内的子View或者子View的后代均会调用到} -false-&amp;gt; Child.dispatchTouchEvent -false-&amp;gt; Parent.dispatchTouchEvent{没有目标消费Child} -DOWN-&amp;gt; Parent.(super)dispatchTouchEvent{Parent处理消费} -DOWN-&amp;gt;  Parent.onTouchEvent -false-&amp;gt; 返回消费状态false&lt;br /&gt;![事件流-13](http://localhost:4000/assets/事件流-13.png)&lt;br /&gt;
14. 同5&lt;br /&gt;
15. 同5&lt;br /&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_UP拦截&lt;br /&gt;
2.子控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-6.png&quot; alt=&quot;角色事件消费状态-6&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
16. 同7&lt;br /&gt;
17. 接收移动事件 -MOVE-&amp;gt; Parent.dispatchTouchEvent -MOVE-&amp;gt; Parent.onInterceptTouchEvent  -false-&amp;gt; Parent.dispatchTouchEvent -MOVE-&amp;gt; Child(目标消费Child).dispatchTouchEvent -MOVE-&amp;gt; Child.onTouchEvent -true-&amp;gt; Child.dispatchTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-17](http://localhost:4000/assets/事件流-17.png)&lt;br /&gt;
18. 接收释放事件 -UP-&amp;gt; Parent.dispatchTouchEvent -UP-&amp;gt; Parent.onInterceptTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -CANCEL-&amp;gt; Child(目标消费Child).dispatchTouchEvent{Child处理消费} -CANCEL-&amp;gt; Child.onTouchEvent -消费状态-&amp;gt; Child.dispatchTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-18](http://localhost:4000/assets/事件流-18.png)
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_UP拦截&lt;br /&gt;
2.子控件不消费事件&lt;br /&gt;
3.父控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-7.png&quot; alt=&quot;角色事件消费状态-7&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
19. 同10&lt;br /&gt;
20. 同2&lt;br /&gt;
21. 同3&lt;br /&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.父控件ACTION_UP拦截&lt;br /&gt;
2.子控件不消费事件&lt;br /&gt;
3.父控件不消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-8.png&quot; alt=&quot;角色事件消费状态-8&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
22. 同13&lt;br /&gt;
23. 同5&lt;br /&gt;
24. 同5
&lt;/blockquote&gt;
&lt;ol&gt;
  &lt;li&gt;父控件不拦截&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;子控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-9.png&quot; alt=&quot;角色事件消费状态-9&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
25. 同7&lt;br /&gt;
26. 同17&lt;br /&gt;
27. 接收释放事件 -UP-&amp;gt; Parent.dispatchTouchEvent -UP-&amp;gt; Parent.onInterceptTouchEvent  -false-&amp;gt; Parent.dispatchTouchEvent -UP-&amp;gt; Child(目标消费Child).dispatchTouchEvent -UP-&amp;gt; Child.onTouchEvent -true-&amp;gt; Child.dispatchTouchEvent -true-&amp;gt; Parent.dispatchTouchEvent -true-&amp;gt; 返回消费状态true&lt;br /&gt;![事件流-27](http://localhost:4000/assets/事件流-27.png)
&lt;/blockquote&gt;
&lt;ol&gt;
  &lt;li&gt;父控件不拦截&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;子控件不消费事件&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;父控件消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-10.png&quot; alt=&quot;角色事件消费状态-10&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
28. 同10&lt;br /&gt;
29. 同2&lt;br /&gt;
30. 同3&lt;br /&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
  &lt;li&gt;父控件不拦截&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;子控件不消费事件&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;父控件不消费事件&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/角色事件消费状态-11.png&quot; alt=&quot;角色事件消费状态-11&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
31. 同13&lt;br /&gt;
32. 同5&lt;br /&gt;
33. 同5&lt;br /&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;启示&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ACTION_DOWN执行事件分发查找（遍历子View，递归分发查找，如果子View未消费，则回退到自己消费，依次向上回溯，找到目标消费View为止）找到目标消费子View。后续事件不再需要查找，直接发送给目标消费子View，如果没有，则自己消费。&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/assets/事件分发路径.png&quot; alt=&quot;事件分发路径&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;事件已消费路径上（终点为目标消费View），如果有父控件拦截事件，则第一次拦截后，会将当前事件转为ACTION_CANCEL传递给目标消费子View，后续事件则直接自己处理消费，不论是否消费，均能收到后续事件流&lt;br /&gt; &lt;img src=&quot;http://localhost:4000/assets/事件分发拦截路径.png&quot; alt=&quot;事件分发拦截路径&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;论证&quot;&gt;论证&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;从事件流可证明事件一致性保证(Consistency Guarantees)：
    &lt;ol&gt;
      &lt;li&gt;ViewGroup在ACTION_DOWN的事件分发返回false（不消费事件），则不再会收到后续事件（ACTION_MOVE、ACTION_UP/ACTION_CANCEL）。&lt;/li&gt;
      &lt;li&gt;ViewGroup在ACTION_DOWN的事件分发返回true（消费事件），则会收到后续事件（ACTION_MOVE、ACTION_UP/ACTION_CANCEL），如果ViewGroup拦截后续事件，则第一次拦截会将事件转为ACTION_CANCEL传递给目标消费子View（终止子View接收后续事件），接下来的后续事件自己消费。&lt;/li&gt;
      &lt;li&gt;ViewGroup在非ACTION_DOWN的事件分发返回消费状态对整体事件流没有影响。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;从注释可证明View.dispatchTouchEvent方法完成事件的消费处理；ViewGroup.dispatchTouchEvent方法完成事件的分发处理；ViewGroup.onInterceptTouchEvent方法完成事件的拦截处理；事件分发路径上的ViewGroup，在ACTION_DOWN或者不是自己直接消费事件时一定会调用onInterceptTouchEvent方法。以及View类的onTouchEvent方法完成具体处理事件消费。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;一张图&quot;&gt;一张图&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/事件分发一张图.png&quot; alt=&quot;事件分发一张图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;赏析&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ACTION_DOWN会触发查找目标消费View，优先子View尝试消费，如果子View仍然没有消费，则依次回溯到父控件尝试消费（直至DecorView，然后Activity尝试消费），如果找到了，则回溯返回true。&lt;/li&gt;
  &lt;li&gt;ACTION_DOWN后续事件执行的前提是事件分发路径的终点就是目标消费View，目标消费View的父控件均会调用到事件拦截（让父控件有机会拦截下来，改变事件流），如果目标消费View的父控件拦截，拦截时的事件会转换为ACTION_CANCEL继续按原路径分发，后续的事件则不再分发给目标消费View，而是拦截的父控件自己消费。&lt;/li&gt;
  &lt;li&gt;非ACTION_DOWN返回的消费状态对事件流没有影响，如果未消费，会回调给Activity处理。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;标准&quot;&gt;标准&lt;/h2&gt;

&lt;h3 id=&quot;常见错误&quot;&gt;常见错误&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;不知道onInterceptTouchEvent和onTouchEvent什么时候会调用，但是知道dispatchTouchEvent每次都会调用，就把逻辑直接写在dispatchTouchEvent的重写方法里面。&lt;br /&gt;问题：不满足事件流一致性，存在目标消费View没有接收到ACTION_UP/ACTION_CANCEL就结束了，导致焦点、按键状态或者按键事件不符合预期。&lt;/li&gt;
  &lt;li&gt;发现onInterceptTouchEvent经常调用到，逻辑写在onInterceptTouchEvent里面。&lt;br /&gt;问题：onInterceptTouchEvent在View自己消费情况下或者拦截之后的事件流不再会调用到，会把坑隐藏得更深【不好复现的Bug才是最难解决的Bug】。&lt;/li&gt;
  &lt;li&gt;鸟枪法，dispatchTouchEvent、onInterceptTouchEvent、onTouchEvent均会调用到逻辑。&lt;br /&gt;问题：路子太野。。。&lt;/li&gt;
  &lt;li&gt;觉得自己很牛X，逻辑分散在dispatchTouchEvent、onInterceptTouchEvent、onTouchEvent里面。&lt;br /&gt;问题：可读性差，逻辑混乱。&lt;/li&gt;
  &lt;li&gt;事件消息只处理了ACTION_DOWN、ACTION_MOVE、ACTION_UP，没有对ACTION_CANCEL或者其他多点触控事件容错处理。&lt;br /&gt;问题：总会出现不常见的问题。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;最佳实践&quot;&gt;最佳实践&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;明确事件流调用顺序以及拦截后的事件流。&lt;/li&gt;
  &lt;li&gt;dispatchTouchEvent：正常情况下不建议重写dispatchTouchEvent方法改变系统事件分发机制，可以看到，Google就没有几个类重新该方法。最多记下坐标点，但千万调用super. dispatchTouchEvent保证系统事件分发正常调用。&lt;/li&gt;
  &lt;li&gt;onInterceptTouchEvent：只处理拦截逻辑，在合适事件将事件流导到onTouchEvent。&lt;/li&gt;
  &lt;li&gt;onTouchEvent：真正处理逻辑。&lt;/li&gt;
  &lt;li&gt;除常见事件处理外，一定要上剩余事件容错处理。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;渔&quot;&gt;渔&lt;/h2&gt;

&lt;h3 id=&quot;方法论&quot;&gt;方法论&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/d968645067d7&quot;&gt;MECE法则和金字塔原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/27880205&quot;&gt;SCQA 架构如何理解？&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;利器&quot;&gt;利器&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;AS源码英文翻译，参考&lt;a href=&quot;http://blog.csdn.net/luofen521/article/details/74295716&quot;&gt;AS翻译插件Translation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Android源码调试
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.genymotion.net/&quot;&gt;Android模拟器GenyMotion&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;GenyMotion创建和App的build.gradle中targetSdkVersion相同API Level模拟器即可Debug对应上源码。进阶参考&lt;a href=&quot;http://weishu.me/2016/05/30/how-to-debug-android-framework/&quot;&gt;如何调试Android Framework？&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://weishu.me/2015/12/21/android-studio-debug-tips-you-may-not-know/&quot;&gt;Android Studio你不知道的调试技巧&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;关键日志输出，使用静态代理，进阶参考&lt;a href=&quot;http://weishu.me/2016/01/28/understand-plugin-framework-proxy-hook/&quot;&gt;Android插件化原理解析——Hook机制之动态代理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;绘图工具
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.processon.com/i/5a633502e4b0332f153dd897&quot;&gt;ProcessOn&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.edrawsoft.com/download-edrawmax-mac.php&quot;&gt;edraw&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;个人主页
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jekyll.com.cn/&quot;&gt;将纯文本转化为静态网站和博客&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/20409634&quot;&gt;怎样引导新手使用 Markdown？&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;利&quot;&gt;利&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;随心所欲控制事件流【大权在手，天下我有】&lt;/li&gt;
  &lt;li&gt;事件分发不再是个事，怕个球&lt;/li&gt;
  &lt;li&gt;各种酷炫动画和自定义控件燥起来&lt;/li&gt;
  &lt;li&gt;再也不用担心面试中尬聊事件分发&lt;/li&gt;
  &lt;li&gt;借鉴上述不成熟的“渔”去爱干嘛干嘛&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;进阶&quot;&gt;进阶&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;滚动控件和按键冲突处理，界面布局滚动&lt;/li&gt;
  &lt;li&gt;滑动冲突
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000002873657&quot;&gt;NestedScrolling机制&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/lmj623565791/article/details/52204039&quot;&gt;Android NestedScrolling机制完全解析 带你玩转嵌套滑动&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/982a83271327&quot;&gt;外部拦截法&amp;amp;内部拦截法&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;手势（GestureDecetor）&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/e99b5e8bd67b&quot;&gt;图解 Android 事件分发机制&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.ingphone.com/android/2013/11/13/Android-%E8%A7%A6%E6%91%B8%E4%BA%8B%E4%BB%B6.html&quot;&gt;Android 响应用户屏幕手势操作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/0c863bbde8eb&quot;&gt;Android MotionEvent详解&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://my.oschina.net/banxi/blog/56421&quot;&gt;android触控,先了解MotionEvent(一)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/woshimalingyi/article/details/50383578&quot;&gt;Android多点触控之——MotionEvent(触控事件)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ztelur.github.io/2016/02/04/%E5%9B%BE%E8%A7%A3Android%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E4%B9%8BView%E7%AF%87/&quot;&gt;图解Android事件传递之View篇&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ztelur.github.io/2016/02/11/%E5%9B%BE%E8%A7%A3Android%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E4%B9%8BViewGroup%E7%AF%87/&quot;&gt;图解Android事件传递之ViewGroup篇&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;歌&quot;&gt;歌&lt;/h1&gt;

&lt;h2 id=&quot;念奴娇天丁震怒&quot;&gt;念奴娇·天丁震怒&lt;/h2&gt;
&lt;p&gt;完颜亮(金代)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;天丁震怒，掀翻银海，散乱珠箔（bó）。&lt;/li&gt;
  &lt;li&gt;六出奇花飞滚滚，平填了山中丘壑。(六出：雪花六角，因用为雪花的别名。)&lt;/li&gt;
  &lt;li&gt;皓虎颠狂，素麟猖獗(chāng jué)，掣(chè, 拉)断珍珠索。(皓虎：白色的老虎。素麟：白色的麒麟。)&lt;/li&gt;
  &lt;li&gt;玉龙酣战，鳞甲满天飘落。&lt;/li&gt;
  &lt;li&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;谁念万里关山，征夫僵立，缟（gǎo）带沾旗脚。(僵立：因寒冷而冻得僵硬直立。缟带：白色的衣带。)&lt;/li&gt;
  &lt;li&gt;色映戈矛，光摇剑戟(jǐ )，杀气横戎幕。(戎幕：行军作战时的营帐。)&lt;/li&gt;
  &lt;li&gt;貔（pí）虎豪雄，偏裨（pí）英勇，共与谈兵略。（裨：pí ，副，偏，小；bì ，增添，补助，如大有～益。）&lt;/li&gt;
  &lt;li&gt;须拼一醉，看取碧空寥廓(liáo kuò)。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;copy-right&quot;&gt;Copy Right&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;作者： 盛书强，美团点评酒旅前端高级工程师，“九域之广,岂一人之强化,必伫才能,共成羽翼”，我们期待你的加入，简历发送至shengshuqiang@gmail.com。&lt;/li&gt;
  &lt;li&gt;声明： 本文为原创文章，转载请注明来源，共建和谐。&lt;/li&gt;
&lt;/ul&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="Android" /><category term="事件分发" /><summary type="html"></summary></entry><entry><title type="html">TeXt - Additional Styles</title><link href="http://localhost:4000/2017/08/08/additional-styles.html" rel="alternate" type="text/html" title="TeXt - Additional Styles" /><published>2017-08-08T00:00:00+00:00</published><updated>2017-08-08T00:00:00+00:00</updated><id>http://localhost:4000/2017/08/08/additional-styles</id><content type="html" xml:base="http://localhost:4000/2017/08/08/additional-styles.html">&lt;h2 id=&quot;alert&quot;&gt;Alert&lt;/h2&gt;

&lt;p class=&quot;success&quot;&gt;Success Text.&lt;/p&gt;

&lt;p class=&quot;info&quot;&gt;Info Text.&lt;/p&gt;

&lt;p class=&quot;warning&quot;&gt;Warning Text.&lt;/p&gt;

&lt;p class=&quot;error&quot;&gt;Error Text.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Success Text.
{:.success}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Info Text.
{:.info}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning Text.
{:.warning}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error Text.
{:.error}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;image&quot;&gt;Image&lt;/h2&gt;

&lt;h3 id=&quot;border&quot;&gt;Border&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_border&quot; class=&quot;border&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.border}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;shadow&quot;&gt;Shadow&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_shadow&quot; class=&quot;shadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.shadow}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rounded&quot;&gt;Rounded&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_rounded&quot; class=&quot;rounded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.rounded}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;circle&quot;&gt;Circle&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_circle&quot; class=&quot;circle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.circle}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mixture&quot;&gt;Mixture&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_border+rounded&quot; class=&quot;border rounded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.border.rounded}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_circle+shadow&quot; class=&quot;circle shadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.circle.shadow}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;//ww1.sinaimg.cn/large/73bd9e13ly1fof1u4iaorj2074074gp3.jpg&quot; alt=&quot;Lenna&quot; title=&quot;Lenna_circle+border+shadow&quot; class=&quot;circle border shadow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![Lenna](path-to-image.jpg){:.circle.border.shadow}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="English" /><summary type="html">Alert Success Text. Info Text. Warning Text. Error Text.</summary></entry><entry><title type="html">TeXt - MathJax</title><link href="http://localhost:4000/2017/07/07/mathjax.html" rel="alternate" type="text/html" title="TeXt - MathJax" /><published>2017-07-07T00:00:00+00:00</published><updated>2017-07-07T00:00:00+00:00</updated><id>http://localhost:4000/2017/07/07/mathjax</id><content type="html" xml:base="http://localhost:4000/2017/07/07/mathjax.html">&lt;p&gt;When &lt;script type=&quot;math/tex&quot;&gt;a \ne 0&lt;/script&gt;, there are two solutions to &lt;script type=&quot;math/tex&quot;&gt;ax^2 + bx + c = 0&lt;/script&gt; and they are&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x_1 = {-b + \sqrt{b^2-4ac} \over 2a}&lt;/script&gt;

&lt;!--more--&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x_2 = {-b - \sqrt{b^2-4ac} \over 2a} \notag&lt;/script&gt;

&lt;p class=&quot;warning&quot;&gt;You need set &lt;code class=&quot;highlighter-rouge&quot;&gt;mathjax: true&lt;/code&gt; in the _config.yml or the markdown’s front matter to &lt;strong&gt;enable&lt;/strong&gt; it.&lt;/p&gt;

&lt;p class=&quot;info&quot;&gt;&lt;strong&gt;After MathJax enabled&lt;/strong&gt;, you can set &lt;code class=&quot;highlighter-rouge&quot;&gt;mathjax_autoNumber: true&lt;/code&gt; to have equations be numbered automatically, You can use \notag or \nonumber to prevent individual equations from being numbered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-tex highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;When &lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;a &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\ne&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;, there are two solutions to &lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; bx &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; c &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt; and they are
&lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;b &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\over&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}$$&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;b &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ac&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\over&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\notag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;$$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;front matter:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: TeXt - MathJax
tags:
  - TeXt
  - English
mathjax: true
mathjax_autoNumber: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="English" /><summary type="html">When , there are two solutions to and they are</summary></entry><entry><title type="html">TeXt - Mermaid</title><link href="http://localhost:4000/2017/06/06/mermaid.html" rel="alternate" type="text/html" title="TeXt - Mermaid" /><published>2017-06-06T00:00:00+00:00</published><updated>2017-06-06T00:00:00+00:00</updated><id>http://localhost:4000/2017/06/06/mermaid</id><content type="html" xml:base="http://localhost:4000/2017/06/06/mermaid.html">&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph TB;
    A[Do you have a problem in your life?]
    B[Then don't worry]
    C[Can you do something about it?]
    A--no--&amp;gt;B;
    A--yes--&amp;gt;C;
    C--no--&amp;gt;B;
    C--yes--&amp;gt;B;
&lt;/code&gt;&lt;/pre&gt;

&lt;!--more--&gt;

&lt;p class=&quot;warning&quot;&gt;You need set &lt;code class=&quot;highlighter-rouge&quot;&gt;mermaid: true&lt;/code&gt; in the _config.yml or the markdown’s front matter to &lt;strong&gt;enable&lt;/strong&gt; it.&lt;/p&gt;

&lt;p&gt;Generation of diagrams and flowcharts from text in a similar manner as markdown.&lt;/p&gt;

&lt;p&gt;Ever wanted to simplify documentation and avoid heavy tools like Visio when explaining your code?&lt;/p&gt;

&lt;p&gt;This is why &lt;a href=&quot;https://mermaidjs.github.io/&quot;&gt;mermaid&lt;/a&gt; was born, a simple markdown-like script language for generating charts from text via javascript.&lt;/p&gt;

&lt;h2 id=&quot;flowchart&quot;&gt;Flowchart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph TD;
    A--&amp;gt;B;
    A--&amp;gt;C;
    B--&amp;gt;D;
    C--&amp;gt;D;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://mermaidjs.github.io/flowchart.html&quot;&gt;Documentation for Flowchart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```mermaid
graph TD;
    A--&amp;gt;B;
    A--&amp;gt;C;
    B--&amp;gt;D;
    C--&amp;gt;D;
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sequence-diagram&quot;&gt;Sequence Diagram&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
    John--&amp;gt;Alice: Great!
    John-&amp;gt;Bob: How about you?
    Bob--&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://mermaidjs.github.io/sequenceDiagram.html&quot;&gt;Documentation for Sequence Diagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```mermaid
sequenceDiagram
    participant Alice
    participant Bob
    Alice-&amp;gt;John: Hello John, how are you?
    loop Healthcheck
        John-&amp;gt;John: Fight against hypochondria
    end
    Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
    John--&amp;gt;Alice: Great!
    John-&amp;gt;Bob: How about you?
    Bob--&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gant-diagrams&quot;&gt;Gant Diagrams&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;gantt
    dateFormat  YYYY-MM-DD
    title Adding GANTT diagram functionality to mermaid
    section A section
    Completed task            :done,    des1, 2014-01-06,2014-01-08
    Active task               :active,  des2, 2014-01-09, 3d
    Future task               :         des3, after des2, 5d
    Future task2              :         des4, after des3, 5d
    section Critical tasks
    Completed task in the critical line :crit, done, 2014-01-06,24h
    Implement parser and jison          :crit, done, after des1, 2d
    Create tests for parser             :crit, active, 3d
    Future task in critical line        :crit, 5d
    Create tests for renderer           :2d
    Add to mermaid                      :1d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://mermaidjs.github.io/gantt.html&quot;&gt;Documentation for Gant Diagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```mermaid
gantt
    dateFormat  YYYY-MM-DD
    title Adding GANTT diagram functionality to mermaid
    section A section
    Completed task            :done,    des1, 2014-01-06,2014-01-08
    Active task               :active,  des2, 2014-01-09, 3d
    Future task               :         des3, after des2, 5d
    Future task2              :         des4, after des3, 5d
    section Critical tasks
    Completed task in the critical line :crit, done, 2014-01-06,24h
    Implement parser and jison          :crit, done, after des1, 2d
    Create tests for parser             :crit, active, 3d
    Future task in critical line        :crit, 5d
    Create tests for renderer           :2d
    Add to mermaid
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="English" /><summary type="html">graph TB; A[Do you have a problem in your life?] B[Then don't worry] C[Can you do something about it?] A--no--&amp;gt;B; A--yes--&amp;gt;C; C--no--&amp;gt;B; C--yes--&amp;gt;B;</summary></entry><entry><title type="html">TeXt - Chart</title><link href="http://localhost:4000/2017/05/05/chart.html" rel="alternate" type="text/html" title="TeXt - Chart" /><published>2017-05-05T00:00:00+00:00</published><updated>2017-05-05T00:00:00+00:00</updated><id>http://localhost:4000/2017/05/05/chart</id><content type="html" xml:base="http://localhost:4000/2017/05/05/chart.html">&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;line&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;January&quot;,
      &quot;February&quot;,
      &quot;March&quot;,
      &quot;April&quot;,
      &quot;May&quot;,
      &quot;June&quot;,
      &quot;July&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;# of bugs&quot;,
        &quot;fill&quot;: false,
        &quot;lineTension&quot;: 0.1,
        &quot;backgroundColor&quot;: &quot;rgba(75,192,192,0.4)&quot;,
        &quot;borderColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;borderCapStyle&quot;: &quot;butt&quot;,
        &quot;borderDash&quot;: [],
        &quot;borderDashOffset&quot;: 0,
        &quot;borderJoinStyle&quot;: &quot;miter&quot;,
        &quot;pointBorderColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointBorderWidth&quot;: 1,
        &quot;pointHoverRadius&quot;: 5,
        &quot;pointHoverBackgroundColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(220,220,220,1)&quot;,
        &quot;pointHoverBorderWidth&quot;: 2,
        &quot;pointRadius&quot;: 1,
        &quot;pointHitRadius&quot;: 10,
        &quot;data&quot;: [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        &quot;spanGaps&quot;: false
      }
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;!--more--&gt;

&lt;p class=&quot;warning&quot;&gt;You need set &lt;code class=&quot;highlighter-rouge&quot;&gt;chart: true&lt;/code&gt; in the _config.yml or the markdown’s front matter to &lt;strong&gt;enable&lt;/strong&gt; it.&lt;/p&gt;
&lt;p&gt;Simple HTML5 Charts using the canvas element &lt;a href=&quot;http://www.chartjs.org/&quot;&gt;chartjs.org&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;line-chart&quot;&gt;Line Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;line&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;January&quot;,
      &quot;February&quot;,
      &quot;March&quot;,
      &quot;April&quot;,
      &quot;May&quot;,
      &quot;June&quot;,
      &quot;July&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;# of bugs&quot;,
        &quot;fill&quot;: false,
        &quot;lineTension&quot;: 0.1,
        &quot;backgroundColor&quot;: &quot;rgba(75,192,192,0.4)&quot;,
        &quot;borderColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;borderCapStyle&quot;: &quot;butt&quot;,
        &quot;borderDash&quot;: [],
        &quot;borderDashOffset&quot;: 0,
        &quot;borderJoinStyle&quot;: &quot;miter&quot;,
        &quot;pointBorderColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointBorderWidth&quot;: 1,
        &quot;pointHoverRadius&quot;: 5,
        &quot;pointHoverBackgroundColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(220,220,220,1)&quot;,
        &quot;pointHoverBorderWidth&quot;: 2,
        &quot;pointRadius&quot;: 1,
        &quot;pointHitRadius&quot;: 10,
        &quot;data&quot;: [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        &quot;spanGaps&quot;: false
      }
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/docs/latest/charts/line.html&quot;&gt;Documentation for Line Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;line&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;January&quot;,
      &quot;February&quot;,
      &quot;March&quot;,
      &quot;April&quot;,
      &quot;May&quot;,
      &quot;June&quot;,
      &quot;July&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;# of bugs&quot;,
        &quot;fill&quot;: false,
        &quot;lineTension&quot;: 0.1,
        &quot;backgroundColor&quot;: &quot;rgba(75,192,192,0.4)&quot;,
        &quot;borderColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;borderCapStyle&quot;: &quot;butt&quot;,
        &quot;borderDash&quot;: [],
        &quot;borderDashOffset&quot;: 0,
        &quot;borderJoinStyle&quot;: &quot;miter&quot;,
        &quot;pointBorderColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointBorderWidth&quot;: 1,
        &quot;pointHoverRadius&quot;: 5,
        &quot;pointHoverBackgroundColor&quot;: &quot;rgba(75,192,192,1)&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(220,220,220,1)&quot;,
        &quot;pointHoverBorderWidth&quot;: 2,
        &quot;pointRadius&quot;: 1,
        &quot;pointHitRadius&quot;: 10,
        &quot;data&quot;: [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        &quot;spanGaps&quot;: false
      }
    ]
  },
  &quot;options&quot;: {}
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;bar-chart&quot;&gt;Bar Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;bar&quot;,
  &quot;data&quot;: {
  &quot;labels&quot;: [
    &quot;Red&quot;,
    &quot;Blue&quot;,
    &quot;Yellow&quot;,
    &quot;Green&quot;,
    &quot;Purple&quot;,
    &quot;Orange&quot;
  ],
  &quot;datasets&quot;: [
    {
    &quot;label&quot;: &quot;# of Votes&quot;,
    &quot;data&quot;: [
      12,
      19,
      3,
      5,
      2,
      3
    ],
    &quot;backgroundColor&quot;: [
      &quot;rgba(255, 99, 132, 0.2)&quot;,
      &quot;rgba(54, 162, 235, 0.2)&quot;,
      &quot;rgba(255, 206, 86, 0.2)&quot;,
      &quot;rgba(75, 192, 192, 0.2)&quot;,
      &quot;rgba(153, 102, 255, 0.2)&quot;,
      &quot;rgba(255, 159, 64, 0.2)&quot;
    ],
    &quot;borderColor&quot;: [
      &quot;rgba(255,99,132,1)&quot;,
      &quot;rgba(54, 162, 235, 1)&quot;,
      &quot;rgba(255, 206, 86, 1)&quot;,
      &quot;rgba(75, 192, 192, 1)&quot;,
      &quot;rgba(153, 102, 255, 1)&quot;,
      &quot;rgba(255, 159, 64, 1)&quot;
    ],
    &quot;borderWidth&quot;: 1
    }
  ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/docs/latest/charts/bar.html&quot;&gt;Documentation for Bar Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;bar&quot;,
  &quot;data&quot;: {
  &quot;labels&quot;: [
    &quot;Red&quot;,
    &quot;Blue&quot;,
    &quot;Yellow&quot;,
    &quot;Green&quot;,
    &quot;Purple&quot;,
    &quot;Orange&quot;
  ],
  &quot;datasets&quot;: [
    {
    &quot;label&quot;: &quot;# of Votes&quot;,
    &quot;data&quot;: [
      12,
      19,
      3,
      5,
      2,
      3
    ],
    &quot;backgroundColor&quot;: [
      &quot;rgba(255, 99, 132, 0.2)&quot;,
      &quot;rgba(54, 162, 235, 0.2)&quot;,
      &quot;rgba(255, 206, 86, 0.2)&quot;,
      &quot;rgba(75, 192, 192, 0.2)&quot;,
      &quot;rgba(153, 102, 255, 0.2)&quot;,
      &quot;rgba(255, 159, 64, 0.2)&quot;
    ],
    &quot;borderColor&quot;: [
      &quot;rgba(255,99,132,1)&quot;,
      &quot;rgba(54, 162, 235, 1)&quot;,
      &quot;rgba(255, 206, 86, 1)&quot;,
      &quot;rgba(75, 192, 192, 1)&quot;,
      &quot;rgba(153, 102, 255, 1)&quot;,
      &quot;rgba(255, 159, 64, 1)&quot;
    ],
    &quot;borderWidth&quot;: 1
    }
  ]
  },
  &quot;options&quot;: {}
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;radar-chart&quot;&gt;Radar Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;radar&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;Eating&quot;,
      &quot;Drinking&quot;,
      &quot;Sleeping&quot;,
      &quot;Designing&quot;,
      &quot;Coding&quot;,
      &quot;Cycling&quot;,
      &quot;Running&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;My First dataset&quot;,
        &quot;backgroundColor&quot;: &quot;rgba(179,181,198,0.2)&quot;,
        &quot;borderColor&quot;: &quot;rgba(179,181,198,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;rgba(179,181,198,1)&quot;,
        &quot;pointBorderColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(179,181,198,1)&quot;,
        &quot;data&quot;: [
          65,
          59,
          90,
          81,
          56,
          55,
          40
        ]
      },
      {
        &quot;label&quot;: &quot;My Second dataset&quot;,
        &quot;backgroundColor&quot;: &quot;rgba(255,99,132,0.2)&quot;,
        &quot;borderColor&quot;: &quot;rgba(255,99,132,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;rgba(255,99,132,1)&quot;,
        &quot;pointBorderColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(255,99,132,1)&quot;,
        &quot;data&quot;: [
          28,
          48,
          40,
          19,
          96,
          27,
          100
        ]
      }
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/docs/latest/charts/radar.html&quot;&gt;Documentation for Radar Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;radar&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;Eating&quot;,
      &quot;Drinking&quot;,
      &quot;Sleeping&quot;,
      &quot;Designing&quot;,
      &quot;Coding&quot;,
      &quot;Cycling&quot;,
      &quot;Running&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;My First dataset&quot;,
        &quot;backgroundColor&quot;: &quot;rgba(179,181,198,0.2)&quot;,
        &quot;borderColor&quot;: &quot;rgba(179,181,198,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;rgba(179,181,198,1)&quot;,
        &quot;pointBorderColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(179,181,198,1)&quot;,
        &quot;data&quot;: [
          65,
          59,
          90,
          81,
          56,
          55,
          40
        ]
      },
      {
        &quot;label&quot;: &quot;My Second dataset&quot;,
        &quot;backgroundColor&quot;: &quot;rgba(255,99,132,0.2)&quot;,
        &quot;borderColor&quot;: &quot;rgba(255,99,132,1)&quot;,
        &quot;pointBackgroundColor&quot;: &quot;rgba(255,99,132,1)&quot;,
        &quot;pointBorderColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBackgroundColor&quot;: &quot;#fff&quot;,
        &quot;pointHoverBorderColor&quot;: &quot;rgba(255,99,132,1)&quot;,
        &quot;data&quot;: [
          28,
          48,
          40,
          19,
          96,
          27,
          100
        ]
      }
    ]
  },
  &quot;options&quot;: {}
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;polar-area-chart&quot;&gt;Polar Area Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;polarArea&quot;,
  &quot;data&quot;: {
    &quot;datasets&quot;: [
      {
        &quot;data&quot;: [
          11,
          16,
          7,
          3,
          14
        ],
        &quot;backgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#4BC0C0&quot;,
          &quot;#FFCE56&quot;,
          &quot;#E7E9ED&quot;,
          &quot;#36A2EB&quot;
        ],
        &quot;label&quot;: &quot;My dataset&quot;
      }
    ],
    &quot;labels&quot;: [
      &quot;Red&quot;,
      &quot;Green&quot;,
      &quot;Yellow&quot;,
      &quot;Grey&quot;,
      &quot;Blue&quot;
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/latest/charts/polar.html&quot;&gt;Documentation for Polar Area Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;polarArea&quot;,
  &quot;data&quot;: {
    &quot;datasets&quot;: [
      {
        &quot;data&quot;: [
          11,
          16,
          7,
          3,
          14
        ],
        &quot;backgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#4BC0C0&quot;,
          &quot;#FFCE56&quot;,
          &quot;#E7E9ED&quot;,
          &quot;#36A2EB&quot;
        ],
        &quot;label&quot;: &quot;My dataset&quot;
      }
    ],
    &quot;labels&quot;: [
      &quot;Red&quot;,
      &quot;Green&quot;,
      &quot;Yellow&quot;,
      &quot;Grey&quot;,
      &quot;Blue&quot;
    ]
  },
  &quot;options&quot;: {}
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pie-chart&quot;&gt;Pie Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;pie&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;Red&quot;,
      &quot;Blue&quot;,
      &quot;Yellow&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;data&quot;: [
          300,
          50,
          100
        ],
        &quot;backgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ],
        &quot;hoverBackgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ]
      }
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/docs/latest/charts/doughnut.html&quot;&gt;Documentation for Pie Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;pie&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;Red&quot;,
      &quot;Blue&quot;,
      &quot;Yellow&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;data&quot;: [
          300,
          50,
          100
        ],
        &quot;backgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ],
        &quot;hoverBackgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ]
      }
    ]
  },
  &quot;options&quot;: {}
} ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;doughnut-chart&quot;&gt;Doughnut Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;doughnut&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;Red&quot;,
      &quot;Blue&quot;,
      &quot;Yellow&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;data&quot;: [
          300,
          50,
          100
        ],
        &quot;backgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ],
        &quot;hoverBackgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ]
      }
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/docs/latest/charts/doughnut.html&quot;&gt;Documentation for Doughnut Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;doughnut&quot;,
  &quot;data&quot;: {
    &quot;labels&quot;: [
      &quot;Red&quot;,
      &quot;Blue&quot;,
      &quot;Yellow&quot;
    ],
    &quot;datasets&quot;: [
      {
        &quot;data&quot;: [
          300,
          50,
          100
        ],
        &quot;backgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ],
        &quot;hoverBackgroundColor&quot;: [
          &quot;#FF6384&quot;,
          &quot;#36A2EB&quot;,
          &quot;#FFCE56&quot;
        ]
      }
    ]
  },
  &quot;options&quot;: {}
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;bubble-chart&quot;&gt;Bubble Chart&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-chart&quot;&gt;{
  &quot;type&quot;: &quot;bubble&quot;,
  &quot;data&quot;: {
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;First Dataset&quot;,
        &quot;data&quot;: [
          {
            &quot;x&quot;: 20,
            &quot;y&quot;: 30,
            &quot;r&quot;: 15
          },
          {
            &quot;x&quot;: 40,
            &quot;y&quot;: 10,
            &quot;r&quot;: 10
          }
        ],
        &quot;backgroundColor&quot;: &quot;#FF6384&quot;,
        &quot;hoverBackgroundColor&quot;: &quot;#FF6384&quot;
      }
    ]
  },
  &quot;options&quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chartjs.org/docs/latest/charts/bubble.html&quot;&gt;Documentation for Bubble Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```chart
{
  &quot;type&quot;: &quot;bubble&quot;,
  &quot;data&quot;: {
    &quot;datasets&quot;: [
      {
        &quot;label&quot;: &quot;First Dataset&quot;,
        &quot;data&quot;: [
          {
            &quot;x&quot;: 20,
            &quot;y&quot;: 30,
            &quot;r&quot;: 15
          },
          {
            &quot;x&quot;: 40,
            &quot;y&quot;: 10,
            &quot;r&quot;: 10
          }
        ],
        &quot;backgroundColor&quot;: &quot;#FF6384&quot;,
        &quot;hoverBackgroundColor&quot;: &quot;#FF6384&quot;
      }
    ]
  },
  &quot;options&quot;: {}
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="English" /><summary type="html">{ &quot;type&quot;: &quot;line&quot;, &quot;data&quot;: { &quot;labels&quot;: [ &quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot; ], &quot;datasets&quot;: [ { &quot;label&quot;: &quot;# of bugs&quot;, &quot;fill&quot;: false, &quot;lineTension&quot;: 0.1, &quot;backgroundColor&quot;: &quot;rgba(75,192,192,0.4)&quot;, &quot;borderColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;borderCapStyle&quot;: &quot;butt&quot;, &quot;borderDash&quot;: [], &quot;borderDashOffset&quot;: 0, &quot;borderJoinStyle&quot;: &quot;miter&quot;, &quot;pointBorderColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;pointBackgroundColor&quot;: &quot;#fff&quot;, &quot;pointBorderWidth&quot;: 1, &quot;pointHoverRadius&quot;: 5, &quot;pointHoverBackgroundColor&quot;: &quot;rgba(75,192,192,1)&quot;, &quot;pointHoverBorderColor&quot;: &quot;rgba(220,220,220,1)&quot;, &quot;pointHoverBorderWidth&quot;: 2, &quot;pointRadius&quot;: 1, &quot;pointHitRadius&quot;: 10, &quot;data&quot;: [ 65, 59, 80, 81, 56, 55, 40 ], &quot;spanGaps&quot;: false } ] }, &quot;options&quot;: {} }</summary></entry><entry xml:lang="zh-Hans"><title type="html">TeXt - Simplified Chinese | 简体中文</title><link href="http://localhost:4000/2017/04/13/simplified-chinese.html" rel="alternate" type="text/html" title="TeXt - Simplified Chinese | 简体中文" /><published>2017-04-13T00:00:00+00:00</published><updated>2017-04-13T00:00:00+00:00</updated><id>http://localhost:4000/2017/04/13/simplified-chinese</id><content type="html" xml:base="http://localhost:4000/2017/04/13/simplified-chinese.html">&lt;p&gt;在 _config.yml 或者头信息里设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;lang: zh-Hans&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;lang: zh&lt;/code&gt; 后，主题文字变为简体中文。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;front matter:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: TeXt - Simplified Chinese | 简体中文
tags:
  - TeXt
  - Simplified Chinese | 简
lang: zh-Hans
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到这个页面的导航和版权信息都变成了简体中文。&lt;/p&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="Simplified Chinese | 简" /><summary type="html">在 _config.yml 或者头信息里设置 lang: zh-Hans 或 lang: zh 后，主题文字变为简体中文。</summary></entry><entry xml:lang="zh-Hant"><title type="html">TeXt - Traditional Chinese | 繁體中文</title><link href="http://localhost:4000/2017/04/12/traditional-chinese.html" rel="alternate" type="text/html" title="TeXt - Traditional Chinese | 繁體中文" /><published>2017-04-12T00:00:00+00:00</published><updated>2017-04-12T00:00:00+00:00</updated><id>http://localhost:4000/2017/04/12/traditional-chinese</id><content type="html" xml:base="http://localhost:4000/2017/04/12/traditional-chinese.html">&lt;p&gt;在 _config.yml 或者頭信息裏設置 &lt;code class=&quot;highlighter-rouge&quot;&gt;lang: zh-Hant&lt;/code&gt; 後，主題文字變為繁體中文。&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;front matter:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: TeXt - Traditional Chinese | 繁體中文
tags:
  - TeXt
  - Traditional Chinese | 繁
lang: zh-Hant
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到這個頁面的導航和版權信息都變成了繁體中文。&lt;/p&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="Traditional Chinese | 繁" /><summary type="html">在 _config.yml 或者頭信息裏設置 lang: zh-Hant 後，主題文字變為繁體中文。</summary></entry><entry xml:lang="en"><title type="html">TeXt - English</title><link href="http://localhost:4000/2017/04/03/english.html" rel="alternate" type="text/html" title="TeXt - English" /><published>2017-04-03T00:00:00+00:00</published><updated>2017-04-03T00:00:00+00:00</updated><id>http://localhost:4000/2017/04/03/english</id><content type="html" xml:base="http://localhost:4000/2017/04/03/english.html">&lt;p&gt;English is the default language of TeXt, if you set &lt;code class=&quot;highlighter-rouge&quot;&gt;lang&lt;/code&gt; in _config.yml to the other language but want make the page English, just set &lt;code class=&quot;highlighter-rouge&quot;&gt;lang: en&lt;/code&gt; in the front matter.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;front matter:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: TeXt - English
tags:
  - TeXt
  - English
lang: en
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="TeXt" /><category term="English" /><summary type="html">English is the default language of TeXt, if you set lang in _config.yml to the other language but want make the page English, just set lang: en in the front matter.</summary></entry><entry><title type="html">Jekyll - Paragraphs</title><link href="http://localhost:4000/2016/10/10/paragraphs.html" rel="alternate" type="text/html" title="Jekyll - Paragraphs" /><published>2016-10-10T00:00:00+00:00</published><updated>2016-10-10T00:00:00+00:00</updated><id>http://localhost:4000/2016/10/10/paragraphs</id><content type="html" xml:base="http://localhost:4000/2016/10/10/paragraphs.html">&lt;p&gt;Electroencephalography (EEG) is an electrophysiological monitoring method to record electrical activity of the brain. It is typically noninvasive, with the electrodes placed along the scalp, although invasive electrodes are sometimes used such as in electrocorticography. EEG measures voltage fluctuations resulting from ionic current within the neurons of the brain. In clinical contexts, EEG refers to the recording of the brain’s spontaneous electrical activity over a period of time, as recorded from multiple electrodes placed on the scalp. Diagnostic applications generally focus either on event-related potentials or on the spectral content of EEG. The former investigates potential fluctuations time locked to an event like stimulus onset or button press. The latter analyses the type of neural oscillations (popularly called “brain waves”) that can be observed in EEG signals in the frequency domain.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;EEG is most often used to diagnose epilepsy, which causes abnormalities in EEG readings. It is also used to diagnose sleep disorders, depth of anesthesia, coma, encephalopathies, and brain death. EEG used to be a first-line method of diagnosis for tumors, stroke and other focal brain disorders, but this use has decreased with the advent of high-resolution anatomical imaging techniques such as magnetic resonance imaging (MRI) and computed tomography (CT). Despite limited spatial resolution, EEG continues to be a valuable tool for research and diagnosis. It is one of the few mobile techniques available and offers millisecond-range temporal resolution which is not possible with CT, PET or MRI.&lt;/p&gt;

&lt;p&gt;Derivatives of the EEG technique include evoked potentials (EP), which involves averaging the EEG activity time-locked to the presentation of a stimulus of some sort (visual, somatosensory, or auditory). Event-related potentials (ERPs) refer to averaged EEG responses that are time-locked to more complex processing of stimuli; this technique is used in cognitive science, cognitive psychology, and psychophysiological research.&lt;/p&gt;

&lt;h2 id=&quot;very-long-word&quot;&gt;Very Long Word&lt;/h2&gt;

&lt;p&gt;MethionylglutaminylarginyltyrosylglutamylserylleucylphenylalanylalanylglutaminylleucyllysylglutamylarginyllysylglutamylglycylalanylphenylalanylvalylprolyphenylalanYlvalythreonylleucylglycylaspartylprolylglycylisoleucylglutamylglutaminylsErylleucyllysylisoleucylaspartylthreonylleucylIsoleucylglutamylalanylglycylalanylasparthlalanylleucylglutamylleucylglycylisoleucylprolylphenylalanylseRylaspartylprolylleucylalanylaspartylglycylpRolylthreOnylisoleucylglutaminylasPfraginylalanylthreonylleucylarfinylalanylphenylalanylalanylalanylglycylvalythreonylprolylalanylglutaminylcysteinylphenylalanylglutamylmethionylleucylalanylleuOylisoleucylarginylglutaminyllysyhistidylprolylthreonylisoleucylprolylisoleucylglycylleucylmethionyltyrosylalanylasparaginylleucylvalylphenylalanylasparaginyllysyglycylisoleucylaspartylglutamylphenylalanylthrosylalanylglutaminylcysteinylglutamyllysylvalylglycylvalylaspartylserylvalylleucylvalylalnylaspartylvalylprolylvalylglUtaminylglutamylserylalanylprolylphenylalanylarginylglutaminylalanylalanylleucylarginylhistidylasparaginyvalylalanylprolylisoleucylprolylisoleucylphenylalanylisoleucylphenylalanylisoleucylcysteinylprolylprolylaspartylalanylaspartylaspartylaspartylleucylleucylarginylglutaminylisoleucylalanylseryltyrosylglycylarginylglycyltyrosylthreonyltyrOsylleucylleucylserylarginylalanylglycylvalylthreonylglycylalanylglutamYlasparainylarginylalanylalanylleucylprolylleucylasparaginylhistidylleucylValylalanyllysylleucyllysylglutamyltyrosylasparaginylalanylalanylprolylprolylleucylglutaminylglgycylphenylalanylglycylisoleucylserylalanylprolylaspartylglutaminylvalyllysylalanylalanylisoleucylaspartylalanylglycylalanylalanylglycylalanylisoleucylserylglycylserylalanylisoleucylvalyllysylisoIeucylisoleucylglutamylglutaminylHistidylasparaginyliSoleucylglutamylprolylglutamyllysylmethionylleucylalanylalanylleucyllysylvalylphenylalanylcalylglutaminylprolylmethionlysylalanylalanylthreonylarginylserine&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;From Wikipedia, the free encyclopedia&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="Jekyll" /><category term="English" /><summary type="html">Electroencephalography (EEG) is an electrophysiological monitoring method to record electrical activity of the brain. It is typically noninvasive, with the electrodes placed along the scalp, although invasive electrodes are sometimes used such as in electrocorticography. EEG measures voltage fluctuations resulting from ionic current within the neurons of the brain. In clinical contexts, EEG refers to the recording of the brain’s spontaneous electrical activity over a period of time, as recorded from multiple electrodes placed on the scalp. Diagnostic applications generally focus either on event-related potentials or on the spectral content of EEG. The former investigates potential fluctuations time locked to an event like stimulus onset or button press. The latter analyses the type of neural oscillations (popularly called “brain waves”) that can be observed in EEG signals in the frequency domain.</summary></entry><entry><title type="html">Jekyll - Headers</title><link href="http://localhost:4000/2016/09/19/headers.html" rel="alternate" type="text/html" title="Jekyll - Headers" /><published>2016-09-19T00:00:00+00:00</published><updated>2016-09-19T00:00:00+00:00</updated><id>http://localhost:4000/2016/09/19/headers</id><content type="html" xml:base="http://localhost:4000/2016/09/19/headers.html">&lt;h1 id=&quot;text-theme-heading&quot;&gt;TeXt Theme Heading&lt;/h1&gt;

&lt;h2 id=&quot;text-theme-heading-1&quot;&gt;TeXt Theme Heading&lt;/h2&gt;

&lt;h3 id=&quot;text-theme-heading-2&quot;&gt;TeXt Theme Heading&lt;/h3&gt;

&lt;h4 id=&quot;text-theme-heading-3&quot;&gt;TeXt Theme Heading&lt;/h4&gt;

&lt;h5 id=&quot;text-theme-heading-4&quot;&gt;TeXt Theme Heading&lt;/h5&gt;

&lt;h6 id=&quot;text-theme-heading-5&quot;&gt;TeXt Theme Heading&lt;/h6&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# TeXt Theme Heading
## TeXt Theme Heading
### TeXt Theme Heading
#### TeXt Theme Heading
##### TeXt Theme Heading
###### TeXt Theme Heading
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;first-level-header&quot;&gt;First level header&lt;/h1&gt;

&lt;h2 id=&quot;second-level-header&quot;&gt;Second level header&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;markdown:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;First level header
==================

Second level header
------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盛书强</name><email>shengshuqiang@gmail.com</email></author><category term="Jekyll" /><category term="English" /><summary type="html">TeXt Theme Heading TeXt Theme Heading TeXt Theme Heading TeXt Theme Heading TeXt Theme Heading TeXt Theme Heading</summary></entry></feed>